#!/bin/bash
#
# script to produce all of KITP comparison project data products
# from my SPH data files (or their interpolated-to-grid versions)
#
resultsdir=~/kitp/results;
echo "putting results in "$resultsdir;
dev="/null";
#set -x; # verbose
#
# check for the existence of MHD dump files
#
if [ -e mkitp???_011 ]; then
   analysis="mhd";
else
   analysis="hydro";
fi

case "$analysis" in
'mhd')
   echo 'MHD ANALYSIS';
   files=`ls mkitp???_001.init mkitp???_?[1-9]1 mkitp???_101`;
   colplots="coldens dens_z0.5toz0.55 vx_z0.5toz0.55 vz_z0.5toz0.55 divv_z0.5toz0.55 emag_z0.5toz0.55";
   sliceplots="densslice vxslice vzslice divvslice emagslice";
   ext="-mhd";
   vxcol=10;
   vzcol=12;
   divvcol=15;
   pdfcol=17;
   emagcol=16;
   if [ ! -e mkitp???_011 ]; then
      echo 'error: no mhd files in this directory';
      exit;
   fi
   for x in price???grid*.dat; do
       if [ -e $x ]; then
          mv $x ${x/price/pricem};
          dimfile=${x/.dat/.dim};
          mv $dimfile ${dimfile/price/pricem};
       fi
   done
;;
'hydro')
   echo 'HYDRO ANALYSIS';
   files=`ls kitp???_001.init kitp???_?[1-9]1 kitp???_101`;
   colplots="coldens dens_z0.5toz0.55 vx_z0.5toz0.55 vz_z0.5toz0.55 divv_z0.5toz0.55";
   sliceplots="densslice vxslice vzslice divvslice";
   ext="";
   vxcol=7;
   vzcol=9;
   divvcol=11;
   pdfcol=12;
   emagcol=0;
;;
*)
   echo 'unknown case';
   exit;
;;
esac

echo FILES=$files;
#
#--set $res based on last existing file (clumsy but it works)
#
allres="crap";
for x in $files; do
   if [ -e $x ]; then
      temp=${x/\_*/};
      allres=${temp/kitp/};
      echo "RESOLUTION = "$allres;
   fi
done
if [ "$allres" = "crap" ]; then
   exit;
else
   res=$allres;
fi
#
#--power spectra and structure functions (from grid)
#
for x in price*grid*.dat; do
   if [ -e $x ]; then
      powfile=${x/.dat/.pow};
      sfnfile=${x/.dat/.sfn};
      temp=${x/grid*/};
      res=${temp/price/};
      echo 'resolution = '$res;
#   if [ -e $powfile ]; then
#      echo $powfile exists;
#   else
#      echo doing $powfile;
#      ~/kitp/src/g2p.x $x;
#   fi
#   cp $powfile $resultsdir/$res;

#   if [ -e $sfnfile ]; then
#      echo $sfnfile exists;
#   else
#      echo doing $sfnfile;
#      ~/kitp/src/g2sf.x $x;
#   fi
#   cp $sfnfile $resultsdir/$res;
   fi
done

#
#--density pdfs (from particles)
#
res=$allres;
plot='density'
psfile="price"$res"_pdf_"$plot"_all.ps";
if [ -e $psfile ]; then
   echo $psfile exists;
else
   cp $resultsdir/pdf.* .;
   ssplash$ext -p pdf $files <<EOF
$pdfcol
6
/cps
99
EOF
   cp pgplot.ps $psfile;
fi
cp $psfile $resultsdir/$res;

#
#--magnetic energy pdfs (from particles)
#
if [ "$analysis" = "mhd" ]; then
   plot='emag'
   psfile="price"$res"_pdf_"$plot"_all.ps";
   if [ -e $psfile ]; then
      echo $psfile exists;
   else
      cp $resultsdir/pdf.* .;
      ssplash$ext -p pdf $files <<EOF
$pdfcol
$emagcol
/cps
99
EOF
      cp pgplot.ps $psfile;
   fi
fi
cp $psfile $resultsdir/$res;

#
#--snapshots (from particles)
#
for x in $files; do
   echo $x;
   y=${x/.init/};
   echo $y;
   if [ "$analysis" = "mhd" ]; then
      num=${y/mkitp???\_/};   
   else
      num=${y/kitp???\_/};
   fi
   temp=${x/\_*/};
   res=${temp/kitp/};
   if [ $num -eq 001 ]; then
      time="t0.00";
   else
      time="t0"$(echo "scale=2; 2.*($num-1)/1000." | bc);
   fi
   ###echo """;
   echo " time = "$time;
   if [ ! -d $resultsdir/$res ]; then
      mkdir $resultsdir/$res;
   fi
#
#--copy pdf files to their proper file names
#
   pdffile="price"$res"_pdf_density_"$time".dat";
   if [ -e $x"_pdf_density.dat" ]; then
      cp $x"_pdf_density.dat" $pdffile;
      cp $pdffile $resultsdir/$res;
   else
      echo "ERROR: "$x"_pdf_density.dat does not exist";
   fi
   if [ "$analysis" = "mhd" ]; then
      pdffile="price"$res"_pdf_emag_"$time".dat";
      if [ -e $x"_pdf_1_2_B2.dat" ]; then
         cp $x"_pdf_1_2_B2.dat" $pdffile;
         cp $pdffile $resultsdir/$res;
      else
         echo "ERROR: "$x"_pdf_1_2_B2.dat does not exist";
      fi
   fi
#
#--make divv files if they do not already exist
#
   if [ -e "$x.divv" ]; then
      echo "$x.divv" exists;
   else
      ~/phantom/phantom2divv $x;
   fi
#
#--column density and 5pc slice plots
#
   for plot in $colplots; do
       case "$plot" in
       'coldens')
          cp $resultsdir/splash$ext.defaults ./splash.defaults
          cp $resultsdir/splash.limits .
          render=6;
          ;;
       'dens_z0.5toz0.55')
          cp $resultsdir/splash$ext.defaults ./splash.defaults
          cp $resultsdir/slice5pc.limits ./splash.limits
          render=6;
          ;;
       'vx_z0.5toz0.55')
          render=$vxcol;
          ;;
       'vz_z0.5toz0.55')
          render=$vzcol;
          ;;
       'divv_z0.5toz0.55')
          render=$divvcol;
          ;;
       'emag_z0.5toz0.55')
          render=$emagcol;
          ;;
       esac
 
       ppmfile="price"$res$plot"_"$time".ppm";
       datfile="price"$res$plot"_"$time".dat";
       if [ -e $ppmfile ]; then
          echo $ppmfile exists;
       else
          ssplash$ext -o ppm $x <<EOF
2
1
$render
0
$dev
99
EOF
          mv splash_00001.ppm $ppmfile;
       fi
       if [ -e $datfile ]; then
          echo $datfile exists;
       else
          ssplash$ext -o ascii $x <<EOF
2
1
$render
0
/null
99
EOF
          mv splash_00001.dat $datfile;
       fi
       cp $ppmfile $resultsdir/$res;
       cp $datfile $resultsdir/$res;
   done
#
#--raw slice at z=0.5
#  (density, vx, vz)
#
   cp $resultsdir/vslicexy$ext.defaults ./splash.defaults;
   cp $resultsdir/vslicexy.limits ./splash.limits;

   for plot in $sliceplots; do
       case "$plot" in
       densslice)
          render=6;
          ;;
       vxslice)
          render=$vxcol;
          ;;
       vzslice)
          render=$vzcol;
          ;;
       divvslice)
          render=$divvcol;
          ;;
       emagslice)
          render=$emagcol;
          ;;
       esac

      ppmfile="price"$res$plot"_"$time".ppm";
      datfile="price"$res$plot"_"$time".dat";
      if [ -e $ppmfile ]; then
         echo $ppmfile exists;
      else
         ssplash$ext -o ppm $x <<EOF
2
1
$render
0
0.5
$dev
99
EOF
         mv splash_00001.ppm $ppmfile;
      fi
      if [ -e $datfile ]; then
         echo $datfile exists;
      else
         ssplash$ext -o ascii $x <<EOF
2
1
$render
0
0.5
/null
99
EOF
         mv splash_00001.dat $datfile;
      fi
      cp $ppmfile $resultsdir/$res;
      cp $datfile $resultsdir/$res;
   done
done

res=$allres;
for plot in $colplots $sliceplots; do
   ppmfile="price_"$plot"all"$res".ppm";
   if [ -s $ppmfile ]; then
      echo $ppmfile exists;
   else
      echo "making "$ppmfile;
      x="price"$res$plot"_crap.ppm";
      pnmcat -lr ${x/crap/t0.00} ${x/crap/t0.02} ${x/crap/t0.04} ${x/crap/t0.06} > row1.ppm;
      pnmcat -lr ${x/crap/t0.08} ${x/crap/t0.10} ${x/crap/t0.12} ${x/crap/t0.14} > row2.ppm;
      if [ -e ${x/crap/t0.16} ]; then
         pnmcat -lr ${x/crap/t0.16} ${x/crap/t0.18} ${x/crap/t0.20} > row3.ppm;
         pnmcat -tb -jleft -white row1.ppm row2.ppm row3.ppm > $ppmfile;
      else
         pnmcat -tb -jleft -white row1.ppm row2.ppm > $ppmfile;      
      fi
   fi
   cp $ppmfile $resultsdir/$res;
   jpegfile=${ppmfile/.ppm/.jpg};
   ppmtojpeg $ppmfile > $jpegfile;
   cp $jpegfile $resultsdir/$res;
done

if [ -e kitpanalysis.ev ]; then
   outfile=$resultsdir/$res/price_time_evolution_$res.ev
   echo "copying kitpanalysis.ev to $outfile in results directory";
   echo "# time evolution of stuff in box (x,y,z)=(0.5,0.5,0.5) to (0.5+1/128,0.5+1/128,0.5+1/128)" > $outfile;
   echo "# Daniel Price, run using approx $res^3 SPH particles" >> $outfile;
   cat kitpanalysis.ev >> $outfile;
fi
if [ -e resources.txt ]; then
   echo "copying resources.txt to results directory";
   cp resources.txt $resultsdir/$res/price_resources_$res.txt;
fi
